norma_q = sqrt((sum((q_vec.^2)'))');
sm_ax = norma_q./(2-((sum((p_vec.^2)'))').*norma_q);
G_vec = vectorp(q_vec, p_vec);
Ecc_vec = vectorp(p_vec, G_vec)-q_vec./[norma(q_vec)  norma(q_vec)  norma(q_vec)];
L = sqrt(sm_ax);
E1 = Ecc_vec(:,1);
E2 = Ecc_vec(:,2);
E3 = Ecc_vec(:,3);
R1 = L.*E1;
R2 = L.*E2;
R3 = L.*E3;
G1 = G_vec(:,1);
G2 = G_vec(:,2);
G3 = G_vec(:,3);
G = sqrt(G1.^2+G2.^2+G3.^2);
E = sqrt(E1.^2+E2.^2+E3.^2);
phi_R = 180/pi*atan2(2*(G1.*R2-R1.*G2), (G1.^2+G2.^2-R1.^2-R2.^2));
UserFunction(:,1) = phi_R;