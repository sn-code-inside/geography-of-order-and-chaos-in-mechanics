%!PS-Adobe-3.0 EPSF-3.0
%XpdfVersion: 4.04
%%Creator: Mayura Draw, Version 4.5
%%Title: prova.md
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 276 272
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 4.04 0
%%Copyright: Copyright 1996-2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/bdef { bind def } bind def
/pdfSetup {
  /pdfDuplex exch def
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      pdfDuplex { /Duplex true def } if
    currentdict end setpagedevice
  } if
  /pdfPageW 0 def
  /pdfPageH 0 def
} def
/pdfSetupPaper {
  2 copy pdfPageH ne exch pdfPageW ne or {
    /pdfPageH exch def
    /pdfPageW exch def
    /setpagedevice where {
      pop 3 dict begin
        /PageSize [pdfPageW pdfPageH] def
        pdfDuplex { /Duplex true def } if
        /ImagingBBox null def
      currentdict end setpagedevice
    } if
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not {
        pdfFillCS setcolorspace pdfFillOP setoverprint
      } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
      /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not {
        pdfStrokeCS setcolorspace pdfStrokeOP setoverprint
      } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
      /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } bdef
/W* { eoclip newpath } bdef
/Ws { strokepath clip newpath } bdef
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/Tj3 {
  pdfTextRender 3 and 3 ne {    fCol
    0 pdfTextRise pdfTextMat dtransform rmoveto
    xyshow2
    0 pdfTextRise neg pdfTextMat dtransform rmoveto
  } {
    pop pop
  } ifelse
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr {
  4 2 roll exch 5 index div exch 4 index div moveto
  exch 3 index div dup 0 rlineto
  exch 2 index div 0 exch rlineto
  neg 0 rlineto
  closepath
} def
/pdfImClip { gsave clip } def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 2 lt {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
end
%%EndSetup
xpdf begin
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 276 272 re
W
q
[0.1 0 0 0.1 0 0] cm
/DeviceCMYK {} cs
[0 0 0 0] sc
108.328 113.332 m
108.328 2664.17 l
f*
5 w
2 M
2 J
/DeviceCMYK {} CS
[0 0 0 0] SC
131.648 101.672 m
131.648 2652.51 l
S
20 w
/DeviceCMYK {} CS
[1 1 0 0] SC
1862.5 1701.67 m
1861.67 1705.83 l
1860 1736.67 l
1857.5 1753.33 l
1854.17 1770.83 l
1849.17 1787.5 l
1843.33 1805 l
1836.67 1821.67 l
1829.17 1838.33 l
1820.83 1854.17 l
1810.83 1870.83 l
1800 1886.67 l
1788.33 1901.67 l
1776.67 1917.5 l
1763.33 1931.67 l
1748.33 1946.67 l
1733.33 1960.83 l
1717.5 1974.17 l
1700.83 1987.5 l
1683.33 2000.83 l
1665 2012.5 l
1645.83 2025 l
1626.67 2035.83 l
1605.83 2046.67 l
1585 2056.67 l
1563.33 2066.67 l
1541.67 2075.83 l
1519.17 2084.17 l
1495.83 2091.67 l
1472.5 2099.17 l
1448.33 2105.83 l
1423.33 2111.67 l
1399.17 2117.5 l
1374.17 2121.67 l
1348.33 2125.83 l
1323.33 2129.17 l
1297.5 2131.67 l
1271.67 2133.33 l
1245.83 2135 l
1220 2135 l
1194.17 2135 l
1167.5 2134.17 l
1141.67 2132.5 l
1116.67 2130.83 l
1090.83 2127.5 l
1065 2124.17 l
1040 2120 l
1015 2115 l
990.832 2109.17 l
966.672 2103.33 l
942.5 2095.83 l
919.172 2088.33 l
896.672 2080 l
874.172 2071.67 l
851.672 2062.5 l
830.828 2052.5 l
810 2041.67 l
790 2030.83 l
770.828 2019.17 l
751.672 2007.5 l
734.172 1995 l
716.672 1981.67 l
700.828 1968.33 l
685 1954.17 l
670 1940 l
656.672 1925 l
643.328 1910 l
631.672 1895 l
620 1879.17 l
610 1863.33 l
600.828 1846.67 l
592.5 1830.83 l
585.828 1814.17 l
579.172 1796.67 l
574.172 1780 l
570 1762.5 l
566.672 1745.83 l
565 1728.33 l
563.328 1693.33 l
565 1671.67 l
567.5 1655 l
570.828 1637.5 l
575 1620 l
580 1603.33 l
586.672 1586.67 l
594.172 1570 l
602.5 1553.33 l
611.672 1537.5 l
622.5 1521.67 l
633.328 1505.83 l
645.828 1490.83 l
658.328 1475.83 l
672.5 1460.83 l
687.5 1446.67 l
703.328 1432.5 l
720 1419.17 l
736.672 1406.67 l
755 1394.17 l
774.172 1381.67 l
793.328 1370.83 l
813.328 1359.17 l
834.172 1349.17 l
855.828 1339.17 l
877.5 1330 l
900 1321.67 l
923.332 1313.33 l
946.672 1305.83 l
970.832 1299.17 l
995 1293.33 l
1019.17 1287.5 l
1044.17 1282.5 l
1070 1278.33 l
1095 1275 l
1120.83 1272.5 l
1146.67 1270 l
1172.5 1268.33 l
1198.33 1268.33 l
1224.17 1267.5 l
1250 1268.33 l
1275.83 1270 l
1301.67 1271.67 l
1327.5 1275 l
1353.33 1278.33 l
1378.33 1282.5 l
1403.33 1286.67 l
1427.5 1292.5 l
1452.5 1298.33 l
1475.83 1305 l
1500 1312.5 l
1522.5 1320.83 l
1545 1329.17 l
1567.5 1338.33 l
1589.17 1348.33 l
1610 1358.33 l
1630 1369.17 l
1649.17 1380.83 l
1668.33 1392.5 l
1686.67 1405 l
1704.17 1417.5 l
1720.83 1430.83 l
1735.83 1445 l
1750.83 1459.17 l
1765 1473.33 l
1778.33 1488.33 l
1790.83 1504.17 l
1802.5 1519.17 l
1812.5 1535 l
1821.67 1551.67 l
1830.83 1568.33 l
1838.33 1584.17 l
1844.17 1601.67 l
1850 1618.33 l
1854.17 1635 l
1858.33 1652.5 l
1860 1670 l
1861.67 1695.83 l
S
/DeviceCMYK {} CS
[0 1 1 0] SC
1645.83 1701.67 m
1645.83 1697.5 l
1647.5 1685 l
1649.17 1678.33 l
1651.67 1671.67 l
1653.33 1666.67 l
1655.83 1661.67 l
1658.33 1656.67 l
1660.83 1652.5 l
1664.17 1647.5 l
1667.5 1642.5 l
1670.83 1638.33 l
1675 1633.33 l
1679.17 1629.17 l
1683.33 1625 l
1688.33 1620.83 l
1693.33 1616.67 l
1698.33 1612.5 l
1704.17 1609.17 l
1709.17 1605.83 l
1715 1602.5 l
1721.67 1599.17 l
1727.5 1595.83 l
1734.17 1592.5 l
1740.83 1590 l
1747.5 1587.5 l
1754.17 1585 l
1761.67 1582.5 l
1768.33 1580.83 l
1775.83 1579.17 l
1783.33 1577.5 l
1790.83 1575.83 l
1798.33 1575 l
1805.83 1573.33 l
1813.33 1572.5 l
1821.67 1572.5 l
1829.17 1571.67 l
1836.67 1571.67 l
1845 1571.67 l
1852.5 1571.67 l
1860 1572.5 l
1868.33 1572.5 l
1875.83 1573.33 l
1883.33 1575 l
1890.83 1575.83 l
1898.33 1577.5 l
1905.83 1579.17 l
1913.33 1580.83 l
1920 1582.5 l
1927.5 1585 l
1934.17 1587.5 l
1940.83 1590 l
1947.5 1592.5 l
1954.17 1595.83 l
1960 1598.33 l
1966.67 1601.67 l
1972.5 1605.83 l
1977.5 1609.17 l
1983.33 1612.5 l
1988.33 1616.67 l
1993.33 1620.83 l
1998.33 1625 l
2002.5 1629.17 l
2006.67 1633.33 l
2010.83 1637.5 l
2014.17 1642.5 l
2017.5 1647.5 l
2020.83 1651.67 l
2024.17 1656.67 l
2026.67 1661.67 l
2028.33 1666.67 l
2030.83 1671.67 l
2032.5 1676.67 l
2034.17 1683.33 l
2035.83 1695 l
2034.17 1715.83 l
2032.5 1725 l
2030.83 1730 l
2029.17 1735 l
2027.5 1740 l
2025 1745 l
2021.67 1750 l
2019.17 1754.17 l
2015.83 1759.17 l
2011.67 1764.17 l
2008.33 1768.33 l
2004.17 1772.5 l
2000 1776.67 l
1995 1780.83 l
1990 1785 l
1985 1789.17 l
1980 1793.33 l
1974.17 1796.67 l
1968.33 1800 l
1962.5 1803.33 l
1955.83 1806.67 l
1950 1809.17 l
1943.33 1812.5 l
1936.67 1815 l
1929.17 1817.5 l
1922.5 1820 l
1915 1821.67 l
1908.33 1823.33 l
1900.83 1825.83 l
1893.33 1826.67 l
1885.83 1828.33 l
1878.33 1829.17 l
1870.83 1830 l
1862.5 1830.83 l
1855 1831.67 l
1847.5 1831.67 l
1839.17 1831.67 l
1831.67 1831.67 l
1824.17 1830.83 l
1815.83 1830.83 l
1808.33 1830 l
1800.83 1829.17 l
1793.33 1827.5 l
1785.83 1826.67 l
1778.33 1825 l
1770.83 1823.33 l
1763.33 1820.83 l
1756.67 1819.17 l
1750 1816.67 l
1742.5 1814.17 l
1735.83 1811.67 l
1730 1808.33 l
1723.33 1805 l
1717.5 1802.5 l
1711.67 1799.17 l
1705.83 1795 l
1700 1791.67 l
1695 1787.5 l
1690 1783.33 l
1685 1780 l
1680.83 1775.83 l
1675.83 1770.83 l
1672.5 1766.67 l
1668.33 1761.67 l
1665 1757.5 l
1661.67 1752.5 l
1659.17 1747.5 l
1655.83 1743.33 l
1654.17 1738.33 l
1651.67 1733.33 l
1650 1727.5 l
1648.33 1722.5 l
1646.67 1713.33 l
S
/DeviceCMYK {} CS
[1 1 1 0] SC
2055 2060.83 m
2046.67 2069.17 l
2010.83 2101.67 l
1973.33 2132.5 l
1934.17 2160.83 l
1893.33 2187.5 l
1850.83 2212.5 l
1806.67 2235 l
1760.83 2255 l
1714.17 2272.5 l
1665.83 2288.33 l
1615.83 2301.67 l
1565 2313.33 l
1513.33 2321.67 l
1460 2328.33 l
1405.83 2332.5 l
1350.83 2334.17 l
1295 2333.33 l
1238.33 2330.83 l
1181.67 2325.83 l
1124.17 2318.33 l
1066.67 2308.33 l
1008.33 2295.83 l
949.172 2281.67 l
890.832 2265 l
832.5 2245.83 l
773.328 2224.17 l
715 2200.83 l
656.672 2175.83 l
599.172 2148.33 l
541.672 2118.33 l
484.172 2086.67 l
427.5 2053.33 l
372.5 2017.5 l
317.5 1980 l
263.328 1941.67 l
210 1900.83 l
158.328 1858.33 l
108.328 1815 l
S
1776.66 148.332 m
1784.16 156.66 l
1828.33 208.332 l
1870 260.832 l
1910.83 313.332 l
1950 368.332 l
1986.66 423.332 l
2021.66 479.16 l
2055 535 l
2086.66 592.5 l
2115.83 650 l
2142.5 708.332 l
2168.33 766.66 l
2190.83 825 l
2211.66 883.332 l
2230 942.5 l
2246.66 1000.83 l
2260.83 1059.16 l
2272.5 1117.5 l
2282.5 1175.83 l
2289.16 1233.33 l
2294.16 1290 l
2296.66 1415.83 l
2293.33 1470 l
2288.33 1523.33 l
2280.83 1576.66 l
2271.66 1628.33 l
2259.16 1678.33 l
2245 1727.5 l
2228.33 1775.83 l
2209.16 1821.66 l
2188.33 1866.66 l
2165 1910.83 l
2140 1952.5 l
2112.5 1992.5 l
2082.5 2030.83 l
2050.83 2067.5 l
S
/DeviceCMYK {} cs
[1 1 1 0] sc
863.328 2011.67 m
756.672 2008.33 l
f*
1891.67 1667.5 m
1975 1600 l
f*
1379.17 2230 m
1367.5 2336.67 l
f*
5 w
23.2695 131.461 m
2731.7 131.461 l
S
124.98 29.9219 m
124.98 2691.38 l
S
10 w
2343 1697.8 m
2338.99 1848.5 2285.17 1993.64 2189.96 2110.54 c
S
2187.71 2108.6 m
2178.41 2088.27 l
2150.08 2155.33 l
2209.56 2113.36 l
2187.71 2108.6 l
h
f
/DeviceCMYK {} cs
[0 0 0 0] sc
88.2734 1794.82 30 55.4102 re
f*
/DeviceCMYK {} CS
[0 0 0 0] SC
88.2734 1794.82 30 55.4102 re
S
5 w
/DeviceCMYK {} CS
[1 1 1 0] SC
786.961 1962.5 m
1914.37 1630.98 l
S
/DeviceCMYK {} cs
[1 1 1 0] sc
791.762 1961.09 m
787.531 1946.7 l
748.59 1973.79 l
795.992 1975.48 l
791.762 1961.09 l
h
f
1909.57 1632.39 m
1913.8 1646.79 l
1952.74 1619.7 l
1905.34 1618 l
1909.57 1632.39 l
h
f
2022.92 1611.88 m
2022.92 1611.88 l
2022.92 1633.6 2007.52 1651.21 1988.51 1651.21 c
1969.51 1651.21 1954.1 1633.6 1954.1 1611.88 c
1954.1 1590.16 1969.51 1572.55 1988.51 1572.55 c
2007.52 1572.55 2022.92 1590.16 2022.92 1611.88 c
f*
2022.92 1611.88 m
2022.92 1611.88 l
2022.92 1633.6 2007.52 1651.21 1988.51 1651.21 c
1969.51 1651.21 1954.1 1633.6 1954.1 1611.88 c
1954.1 1590.16 1969.51 1572.55 1988.51 1572.55 c
2007.52 1572.55 2022.92 1590.16 2022.92 1611.88 c
h
S
749.707 1983.48 m
749.707 1983.48 l
749.707 1997.78 738.109 2009.38 723.809 2009.38 c
709.508 2009.38 697.914 1997.78 697.914 1983.48 c
697.914 1969.18 709.508 1957.58 723.809 1957.58 c
738.109 1957.58 749.707 1969.18 749.707 1983.48 c
f*
749.707 1983.48 m
749.707 1983.48 l
749.707 1997.78 738.109 2009.38 723.809 2009.38 c
709.508 2009.38 697.914 1997.78 697.914 1983.48 c
697.914 1969.18 709.508 1957.58 723.809 1957.58 c
738.109 1957.58 749.707 1969.18 749.707 1983.48 c
h
S
1697.18 1697.3 m
1491.32 2268.04 l
f*
1697.18 1697.3 m
1491.32 2268.04 l
S
1493.01 2263.34 m
1478.9 2258.25 l
1477.74 2305.67 l
1507.12 2268.43 l
1493.01 2263.34 l
h
f
156.504 1695.91 m
2342.34 1695.91 l
S
2156.36 2167.33 m
188.238 139.27 l
S
1497.41 2330.33 m
1497.41 2330.33 l
1497.41 2344.63 1485.81 2356.23 1471.51 2356.23 c
1457.21 2356.23 1445.61 2344.63 1445.61 2330.33 c
1445.61 2316.03 1457.21 2304.43 1471.51 2304.43 c
1485.81 2304.43 1497.41 2316.03 1497.41 2330.33 c
f*
1497.41 2330.33 m
1497.41 2330.33 l
1497.41 2344.63 1485.81 2356.23 1471.51 2356.23 c
1457.21 2356.23 1445.61 2344.63 1445.61 2330.33 c
1445.61 2316.03 1457.21 2304.43 1471.51 2304.43 c
1485.81 2304.43 1497.41 2316.03 1497.41 2330.33 c
h
S
Q
q
Q
showpage
%%PageTrailer
pdfEndPage
end
%%Trailer
%%DocumentSuppliedResources:
%%EOF
